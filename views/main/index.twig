{% extends 'main/local_layout.twig' %}

{% import 'macros.twig' as gm %}

{% set index = true %}
{% set no_disqus = true %}

{% if game %}
    {% set last_turn = game.last_turn %}
    {% set before_last_turn = game.before_last_turn %}
    
    {% if last_turn %}
        {% set with_problems = true %}
        {% set problems_word = last_turn.word %}
        {% set problems_association = last_turn.association %}
    {% endif %}
{% endif %}

{% set title = short_site_description %}

{% block content %}
    <div class="panel">
        <div class="panel-body">
            {% if not auth.user %}
                {% include 'main/includes/demo_game.twig' %}
            {% else %}
                {% if game %}
                    <div ng-show="play.games.length > 1 || play.currentGame().history.length > 1" class="br-word mb-2" ng-cloak>
                        <span ng-repeat="game in play.games" ng-class="[{true:'ml-1'}[!$first]]">
                            <a ng-href="{{'{{game.url}}'}}" data-toggle="tooltip" ng-attr-title="{{'{{\'Игра #\' + game.id}}'}}">#</a>

                            {% include 'components/history.twig' with { 'history': 'game.history'} only %}
                        </span>
                    </div>

                    <div ng-show="play.turn">
                        <span ng-show="!play.turn().association">Компьютер говорит новое слово:</span>
                        <span ng-show="play.turn().association">В ответ на <span class="label turn-label label-success"><a ng-href="{{'{{play.prevTurn().url}}'}}" ng-bind="play.prevTurn().word"></a></span> компьютер говорит:</span>
                        <span class="label br-word label-info turn-label">
                            <a ng-href="{{'{{play.turn().url}}'}}" ng-bind="play.turn().word"></a>
                        </span>
                    </div>

                    <div ng-cloak class="col-md-6 col-xs-12 mt-2 ph-0">
                        <form autocomplete="off">
                            <div class="form-group mb-2">
                                <label for="nextWord">Ваше слово:</label>

                                <div class="input-group">
                                    <input id="nextWord" ng-model="play.input" class="form-control" maxlength="{{ word_max_length }}" data-focus required />

                                    <span class="input-group-btn">
                                        <button type="submit" ng-click="sendWord()" class="btn btn-success ajax-button" ng-disabled="!play.input || play.loading || play.saving"><i class="fas fa-spinner fa-lg fa-spin ajax-button-spinner" ng-show="play.saving"></i><span ng-hide="play.saving">Отправить</span></button>
                                    </span>
                                </div>
                            </div>
                        </form>
                    </div>

                    <div class="col-xs-12 ph-0">
                        <div ng-cloak class="alert alert-danger alert-dismissable fade in">
                            <a href="javascript:void(0)" class="close" data-hide="alert" aria-label="close">&times;</a>
                            <div ng-bind-html="alertError|rawHtml"></div>
                        </div>

                        <div class="mt-2">
                            <button ng-click="skip()" class="btn btn-default mr-2" ng-disabled="loading || saving"><i class="fas fa-forward action-color mr-1"></i> Другое слово</button>

                            {% if with_problems %}
                                <button ng-click="problemsDialog()" class="btn btn-default" ng-disabled="loading || saving"><i class="fas fa-exclamation-triangle danger-color mr-1"></i> Что-то не так!</button>
                            {% endif %}
                        </div>
                    </div>
                {% else %}
                    {% if last_game %}
                        <div class="mb-2">
                            <strong>
                                {% if last_game.is_won_by_player %}
                                    Поздравляем! Вы победили! :)
                                {% else %}
                                    Вы проиграли. :( Попробуйте еще!
                                {% endif %}
                            </strong>
                        </div>
                        <div class="mb-2">Запись игры ({{ last_game_turn_count_str }}):</div>
                        <div class="mb-2">
                            {% include 'components/game_log_inline.twig' with { 'game': last_game } only %}
                        </div>
                    {% else %}
                        <div class="mb-2">
                            Привет, <strong>{{ auth.user.display_name }}</strong>!
                        </div>
                    {% endif %}

                    <div class="mb-2">{% if last_game %}Сыграем еще?{% else %}Поиграем?{% endif %}</div>
                    <div ng-cloak>
                        <button ng-click="newGame()" class="btn btn-success ajax-button" ng-disabled="loading || saving" data-focus><i class="fas fa-spinner fa-lg fa-spin ajax-button-spinner" ng-show="saving"></i><span ng-hide="saving">Начать игру</span></button>
                    </div>
                {% endif %}
            {% endif %}
        </div>
    </div>

    {% if not auth.user %}
        <div class="panel">
            <div class="panel-body">
                {% include 'main/includes/demo_warning.twig' %}
            </div>
        </div>
    {% endif %}

    {% include 'components/news_brief.twig' with { 'news': news } %}

    {% include 'main/modals/problems.twig' with {
        'word': problems_word,
        'association': problems_association,
        'prev_word': before_last_turn.word,
        'word_max_length': word_max_length
    } %}
{% endblock %}

{% set even_more_angular %}
    $scope.languageId = {{ language.id }};

    {% if not auth.user %}
        {% include 'main/scripts/demo_game.twig' %}
    {% else %}
        $scope.play = {
            turn: function () {
                return this.turnByIndex(0);
            },
            prevTurn: function () {
                return this.turnByIndex(1);
            },
            turnByIndex: function (index) {
                const currentGame = this.currentGame();

                if (!currentGame) {
                    return null;
                }

                const history = currentGame.history;

                if (history.length < (index + 1)) {
                    return null;
                }

                return history[history.length - index - 1];
            },
            input: null,
            loading: true,
            saving: false,
            alertError: null,
            init: function () {
                this.loading = false;

                autofocus();
            },
            currentGame: function () {
                return this.games.length > 0
                    ? this.games[this.games.length - 1]
                    : null;
            },
            games: [
                {% if game %}
                {
                    id: {{ game.id }},
                    url: '{{ game.url }}',
                    history: [
                        {% for turn in game.turns.reverse %}
                            {
                                'turn_id': {{ turn.id }},
                                'word': '{{ turn.word.word }}',
                                'id': {{ turn.word.id }},
                                'url': '{{ turn.word.url }}',
                                'is_ai': {{ turn.user ? 'false' : 'true' }}{% if turn.association %},
                                'association': {
                                    'id': {{ turn.association.id }},
                                    'is_approved': {{ turn.association.is_approved ? 'true' : 'false' }},
                                    'url': '{{ turn.association.url }}'
                                }{% endif %}
                            }{% if not loop.last %},{% endif %}
                        {% endfor %}
                    ],
                }
                {% endif %}
            ],
            addToHistory: function (turn) {
                const currentGame = this.currentGame();

                if (currentGame && turn.game.id == currentGame.id) {
                    currentGame.history.push(turn);
                } else {
                    let newGame = {
                        id: turn.game.id,
                        url: turn.game.url,
                        history: [turn]
                    };

                    this.games.push(newGame);
                }

                $scope.updateUI();
            }
        };

        $timeout(() => {
            $scope.play.init();
        });

        $scope.processGameResponse = (data) => {
            const question = data.question;
            const answer = data.answer;
            const fetched = data.new;

            if (question) {
                $scope.play.addToHistory(question);
            }

            if (answer) {
                $scope.play.addToHistory(answer);
            }
            else if (fetched) {
                $scope.play.addToHistory(fetched);
            }

            $scope.play.input = null;
            $scope.play.saving = false;
        };

        $scope.normalize = (word) => {
            return word.trim().toLowerCase();
        };

        $scope.showWordError = (error) => {
            $scope.alertError = error;
            showAlertError();
        };

        {# todo: remove this #}
        $scope.newGame = () => {
            $scope.prePost(null);

            $scope.ajax({
                url: '{{ path_for('actions.game.start') }}',
                data: { language_id: $scope.languageId },
                onSuccess: $scope.postSuccess,
                noSuccessMessage: true,
            });
        };

        $scope.sendWord = () => {
            const game = $scope.play.currentGame();

            if (!game) {
                $scope.showWordError('Игра не начата, что-то пошло не так.');
                return;
            }

            let nextWord = $scope.play.input;
            nextWord = $scope.normalize(nextWord);

            if (!nextWord || nextWord.length == 0) {
                $scope.showWordError('Слово не может быть пустым.');
                return;
            }

            const turn = $scope.play.turn();

            if (turn) {
                const word = turn.word;

                if (nextWord == word) {
                    $scope.showWordError('Слово совпадает с предыдущим.');
                    return;
                }
            }

            const prevTurn = $scope.play.prevTurn();

            if (prevTurn) {
                const prevWord = prevTurn.word;

                if (nextWord == prevWord) {
                    $scope.showWordError('Слово совпадает с предпоследним.');
                    return;
                }
            }

            $scope.prePost(null);

            let data = {
                game_id: game.id,
                word: nextWord
            };

            if (turn) {
                data.prev_turn_id = turn.turn_id;
            }

            $scope.ajax({
                url: '{{ path_for('actions.turn.create') }}',
                data: data,
                onSuccess: $scope.processGameResponse,
                noSuccessMessage: true,
            });
        };

        $scope.skip = () => {
            $scope.ajax({
                url: '{{ path_for('actions.turn.skip') }}',
                onSuccess: $scope.processGameResponse,
                noSuccessMessage: true,
            });
        };

        {% if with_problems %}
            {% include 'main/scripts/problems.twig' with {
                'word': problems_word,
                'association': problems_association
            } only %}
        {% endif %}
    {% endif %}
{% endset %}
