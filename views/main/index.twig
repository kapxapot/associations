{% extends 'main/local_layout.twig' %}

{% import 'macros.twig' as gm %}

{% set index = true %}
{% set no_disqus = true %}

{% if game %}
    {% set last_turn = game.last_turn %}
    {% set before_last_turn = game.before_last_turn %}
    
    {% if last_turn %}
        {% set with_problems = true %}
        {% set problems_word = last_turn.word %}
        {% set problems_association = last_turn.association %}
    {% endif %}
{% endif %}

{% set title = short_site_description %}

{% block content %}
    <div class="panel">
        <div class="panel-body">
            {% if not auth.user %}
                <div class="mb-0" ng-cloak>
                    <div ng-show="demo.history.length > 1" class="br-word mb-2">
                        <span ng-repeat="word in demo.history">
                            <span ng-show="word.association"><a class="assoc-arrow" ng-href="{{'{{word.association.link}}'}}">{{'{{word.association.is_approved ? "&#x21C9;" : "&#x2192;"}}'}}</a></span>

                            <span ng-show="!$first && !word.isAi && !word.association && demo.history[$index - 1].isAi"><a class="assoc-arrow">&#x21E2;</a></span>

                            <span class="label turn-label" ng-class="[{true:'mr-1'}[!$last && ((word.isAi && demo.history[$index + 1].isAi) || (!word.isAi && !demo.history[$index + 1].association))], {1:'label-info', 2:'label-success', 3:'label-warning'}[word.isAi ? 1 : (word.id ? 2 : 3)]]"><a ng-show="word.link" ng-href="{{'{{word.link}}'}}" ng-bind="word.word"></a><span ng-hide="word.link" ng-bind="word.word"></span></span>
                        </span>
                    </div>
                    <div ng-hide="demo.word">
                        Компьютер думает...
                    </div>
                    <div ng-show="demo.word">
                        <span ng-show="!demo.word.association">Компьютер говорит новое слово:</span>
                        <span ng-show="demo.word.association">В ответ на <span class="label turn-label label-success"><a ng-href="{{'{{demo.prevWord().link}}'}}" ng-bind="demo.prevWord().word"></a></span> компьютер говорит:</span>
                        <span class="label br-word label-info turn-label">
                            <a ng-href="{{'{{demo.word.link}}'}}" ng-bind="demo.word.word"></a>
                        </span>
                    </div>

                    <div ng-cloak class="col-md-6 col-xs-12 mt-2 ph-0">
                        <form autocomplete="off">
                            <div class="form-group mb-2">
                                <label for="demoNextWord">Ваше слово:</label>

                                <div class="input-group">
                                    <input name="demoNextWord" id="demoNextWord" ng-model="demo.input" class="form-control" maxlength="{{ word_max_length }}" data-focus required />

                                    <span class="input-group-btn">
                                        <button type="submit" ng-click="demo.send()" class="btn btn-success ajax-button" ng-disabled="!demo.input || demo.loading || demo.saving"><i class="fas fa-spinner fa-lg fa-spin ajax-button-spinner" ng-show="demo.saving"></i><span ng-hide="demo.saving">Отправить</span></button>
                                    </span>
                                </div>
                            </div>

                            <div ng-cloak class="alert alert-danger alert-dismissable fade in mt-2">
                                <a href="javascript:void(0)" class="close" data-hide="alert" aria-label="close">&times;</a>
                                <div ng-bind-html="demo.alertError|rawHtml"></div>
                            </div>

                            <div class="mt-3">
                                <a role="button" ng-click="demo.fetch()" class="btn btn-default mr-2" ng-disabled="demo.loading || demo.saving"><i class="fas fa-forward action-color mr-1"></i> Другое слово</a>
                            </div>
                        </form>
                    </div>
                </div>
            {% else %}
                {% if game %}
                    {% set game_turns_count = game.turns.count %}

                    <div ng-cloak class="mb-2">Идет игра! Началась {{ gm.moment_from_now(game.created_at_iso) }}, ход: {{ game_turns_count + 1 }}.</div>

                    {% if game_turns_count > 1 %}
                        <div class="mb-2">
                            {% include 'components/game_log_inline.twig' with { 'game': game } only %}
                        </div>
                    {% endif %}

                    {% if last_turn %}
                        {% if before_last_turn %}
                            {% set msg %}В ответ на {% include 'components/turn_word.twig' with { 'turn': before_last_turn } only %} {% endset %}
                        {% endif %}
                        {% set msg_part_two %}
                            {% if last_turn.is_ai_turn %}
                                {% if msg %}к{% else %}К{% endif %}омпьютер
                            {% elseif last_turn.user %}
                                {% if msg %}и{% else %}И{% endif %}грок <strong>{{ last_turn.user.display_name }}</strong>
                            {% endif %}
                            говорит: {% include 'components/turn_word.twig' with { 'turn': last_turn } only %}
                        {% endset %}
                        {% set msg = msg ? msg ~ msg_part_two : msg_part_two %}
                        <div>{{ msg|raw }}</div>
                    {% endif %}

                    <div ng-cloak class="col-md-6 col-xs-12 mt-2 ph-0">
                        <form autocomplete="off">
                            <div class="form-group mb-2">
                                <label for="nextWord">Ваше слово:</label>

                                <div class="input-group">
                                    <input name="nextWord" id="nextWord" class="form-control" maxlength="{{ word_max_length }}" data-focus required />

                                    <span class="input-group-btn">
                                        <button type="submit" ng-click="sendWord()" class="btn btn-success ajax-button" ng-disabled="loading || saving"><i class="fas fa-spinner fa-lg fa-spin ajax-button-spinner" ng-show="saving"></i><span ng-hide="saving">Отправить</span></button>
                                    </span>
                                </div>
                            </div>

                            <div ng-cloak class="alert alert-danger alert-dismissable fade in mt-2">
                                <a href="javascript:void(0)" class="close" data-hide="alert" aria-label="close">&times;</a>
                                <div ng-bind-html="alertError|rawHtml"></div>
                            </div>

                            <div class="mt-3">
                                <a role="button" ng-click="skip()" class="btn btn-default mr-2" ng-disabled="loading || saving"><i class="fas fa-forward action-color mr-1"></i> Другое слово</a>

                                {% if with_problems %}
                                    <a role="button" ng-click="problemsDialog()" class="btn btn-default" ng-disabled="loading || saving"><i class="fas fa-exclamation-triangle danger-color mr-1"></i> Что-то не так!</a>
                                {% endif %}
                            </div>
                        </form>
                    </div>
                {% else %}
                    {% if last_game %}
                        <div class="mb-2">
                            <strong>
                                {% if last_game.is_won_by_player %}
                                    Поздравляем! Вы победили! :)
                                {% else %}
                                    Вы проиграли. :( Попробуйте еще!
                                {% endif %}
                            </strong>
                        </div>
                        <div class="mb-2">Запись игры ({{ last_game_turn_count_str }}):</div>
                        <div class="mb-2">
                            {% include 'components/game_log_inline.twig' with { 'game': last_game } only %}
                        </div>
                    {% else %}
                        <div class="mb-2">
                            Привет, <strong>{{ auth.user.display_name }}</strong>!
                        </div>
                    {% endif %}

                    <div class="mb-2">{% if last_game %}Сыграем еще?{% else %}Поиграем?{% endif %}</div>
                    <div ng-cloak>
                        <button ng-click="newGame()" class="btn btn-success ajax-button" ng-disabled="loading || saving" data-focus><i class="fas fa-spinner fa-lg fa-spin ajax-button-spinner" ng-show="saving"></i><span ng-hide="saving">Начать игру</span></button>
                    </div>
                {% endif %}
            {% endif %}
        </div>
    </div>

    {% if not auth.user %}
        <div class="panel">
            <div class="panel-body">
                {% include 'main/includes/demo_warning.twig' %}
            </div>
        </div>
    {% endif %}

    {% include 'components/news_brief.twig' with { 'news': news } %}

    {% include 'main/modals/problems.twig' with {
        'word': problems_word,
        'association': problems_association,
        'prev_word': before_last_turn.word,
        'word_max_length': word_max_length
    } %}
{% endblock %}

{% set even_more_angular %}
    $scope.languageId = {{ language.id }};

    {% if auth.user %}
        autofocus();
    {% else %}
        {# demo game block #}
        $scope.languageCode = '{{ language.code }}';

        $scope.demoRequest = (config) => {
            $scope.ajax({
                method: config.method ? config.method : 'get',
                headers: {
                    'Content-Type': 'application/json'
                },
                url: config.url,
                data: config.data ? config.data : '',
                setError: (msg) => { $scope.demo.alertError = msg; },
                showError: () => { showAlertError(); },
                setLoading: (loading) => { $scope.loading = loading; },
                setSaving: (saving) => { $scope.saving = saving; },
                onSuccess: config.onSuccess,
                noSuccessMessage: true
            });
        };

        $scope.demo = {
            word: null,
            history: [],
            prevWord: function () {
                if (this.history.length < 2) {
                    return null;
                }

                return this.history[this.history.length - 2];
            },
            input: null,
            loading: true,
            saving: false,
            alertError: null,
            init: function () {
                this.fetch();
                this.loading = false;

                autofocus();
            },
            buildUrl: function () {
                let url = '{{ path_for('api.public.play') }}';

                if (this.input) {
                    url += '/' + encodeURIComponent(this.input);
                }

                url += '?lang=' + $scope.languageCode;

                if (this.word) {
                    url += '&prev_word_id=' + this.word.id;
                }

                return url;
            },
            fetch: function () {
                $scope.demoRequest({
                    url: this.buildUrl(),
                    onSuccess: (data) => {
                        this.setWord(data.new, true);
                    }
                });
            },
            setWord: function (word) {
                this.word = word;
                this.addToHistory(word, true);
            },
            addToHistory: function (word, isAi) {
                word.isAi = isAi;
                this.history.push(word);
            },
            send: function () {
                this.saving = true;

                const said = encodeURIComponent(this.input);

                $scope.demoRequest({
                    url: this.buildUrl(),
                    onSuccess: (data) => {
                        const question = data.question;
                        const answer = data.answer;
                        const fetched = data.new;

                        if (question) {
                            this.addToHistory(question, false);
                        }

                        if (answer) {
                            this.setWord(answer);
                        }
                        else if (fetched) {
                            this.setWord(fetched);
                        }
                        else {
                            this.alertError = 'Что-то пошло не так. У компьютера нет слов...';
                            showAlertError();
                        }

                        this.input = null;

                        this.saving = false;
                    }
                });
            }
        };

        $timeout(() => {
            $scope.demo.init();
        });
    {% endif %}

    {% if not game %}
        $scope.newGame = () => {
            $scope.prePost(null);

            $scope.ajax({
                url: '{{ path_for('actions.game.start') }}',
                data: { language_id: $scope.languageId },
                onSuccess: $scope.postSuccess,
                noSuccessMessage: true,
            });
        };
    {% else %}
        $scope.normalize = (word) => {
            return word.trim().toLowerCase();
        };
        
        $scope.showWordError = (error) => {
            $scope.alertError = error;
            showAlertError();
        };
        
        $scope.sendWord = () => {
            let nextWord = $('#nextWord').val();
            nextWord = $scope.normalize(nextWord);
            
            console.log(nextWord);

            if (!nextWord || nextWord.length == 0) {
                $scope.showWordError('Слово не может быть пустым.');
                return;
            }
            
            {% if last_turn %}
                const prevWord = '{{ last_turn.word.word }}';
    
                if (nextWord == prevWord) {
                    $scope.showWordError('Слово совпадает с предыдущим.');
                    return;
                }

                {% if before_last_turn %}
                    const beforePrevWord = '{{ before_last_turn.word.word }}';
            
                    if (nextWord == beforePrevWord) {
                        $scope.showWordError('Слово совпадает с предпоследним.');
                        return;
                    }
                {% endif %}
            {% endif %}

            $scope.prePost(null);

            $scope.ajax({
                url: '{{ path_for('actions.turn.create') }}',
                data: {
                    game_id: {{ game.id }},
                    {% if last_turn %}
                        prev_turn_id: {{ last_turn.id }},
                    {% endif %}
                    word: nextWord
                },
                onSuccess: $scope.postSuccess,
                noSuccessMessage: true,
            });
        };

        $scope.skip = () => {
            $scope.ajax({
                url: '{{ path_for('actions.game.finish') }}',
                onSuccess: $scope.postSuccess,
                noSuccessMessage: true,
            });
        };

        {% if with_problems %}
            {% include 'main/scripts/problems.twig' with {
                'word': problems_word,
                'association': problems_association
            } only %}
        {% endif %}
    {% endif %}
{% endset %}
