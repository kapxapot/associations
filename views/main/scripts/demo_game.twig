$scope.languageCode = '{{ language.code }}';

$scope.demo = {
    word: null,
    history: [],
    prevWord: function() {
        if (this.history.length < 2) {
            return null;
        }

        return this.history[this.history.length - 2];
    },
    input: null,
    loading: true,
    saving: false,
    alertError: null,
    isBroken: false,
    isOk: false,
    request: function(config) {
        let data = {
            lang_code: $scope.languageCode
        };

        if (this.input) {
            data.word = this.input;
        }

        if (this.word) {
            data.prev_word_id = this.word.id;
        }

        this.saving = true;

        $scope.ajax({
            url: '{{ path_for('api.public.play') }}',
            data: data,
            setSaving: (value) => { this.saving = value; },
            setError: (msg) => { this.alertError = msg; },
            onSuccess: (data) => {
                config.onSuccess(data);

                this.saving = false;
            },
            noSuccessMessage: true
        });
    },
    fetch: function(onSuccess = null) {
        this.request({
            onSuccess: (data) => {
                this.setWord(data.new, true);

                if (onSuccess) {
                    onSuccess();
                }
            }
        });
    },
    init: function() {
        this.fetch(() => {
            this.loading = false;

            this.isBroken = !this.word && this.history.length == 0;
            this.isOk = this.word;

            setTimeout(() => {
                autofocus();
            }, 100);
        });
    },
    setWord: function(word) {
        this.word = word;
        this.addToHistory(word, true);
    },
    addToHistory: function(word, isAi) {
        if (!word) {
            return;
        }

        word.is_ai = isAi;
        this.history.push(word);
    },
    send: function() {
        this.request({
            onSuccess: (data) => {
                const question = data.question;
                const answer = data.answer;
                const fetched = data.new;

                if (question) {
                    this.addToHistory(question, false);
                }

                if (answer) {
                    this.setWord(answer);
                }
                else if (fetched) {
                    this.setWord(fetched);
                }

                this.input = null;
            }
        });
    }
};

$timeout(() => {
    $scope.demo.init();
});
